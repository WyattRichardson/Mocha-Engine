#version 330 core 
in vec2 interpTexCoord;
in vec3 interpNormal;
in vec3 toLightVectors[4];
uniform vec3 lightColors[4];
uniform sampler2D texture0;

void main(){
	vec3 totalDiffuse = vec3(0.0);
	vec3 unitNormal = normalize(interpNormal);
	float totalBrightness = 0.0;
	vec2 texCoord = interpTexCoord / 20;
	vec4 textureCol = texture(texture0, texCoord);
	for(int i = 0; i < 4; i++){
		float brightness = max(0.0, dot(normalize(toLightVectors[i]), unitNormal));
		totalBrightness += brightness / 4;
		vec3 diffuse = brightness * (lightColors[i] * textureCol.xyz);
		totalDiffuse += diffuse;
	}
	totalDiffuse = max(vec3(0.2,0.2,0.2), totalDiffuse);
	totalBrightness = max(0.3, totalBrightness);
	gl_FragColor = (textureCol + vec4(totalDiffuse, 1.0)) * totalBrightness;
}
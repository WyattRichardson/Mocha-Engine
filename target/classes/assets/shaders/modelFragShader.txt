#version 330 core 
in vec2 interpTexCoord;
in vec3 interpNormal;
in vec3 toLightVectors[4];
uniform vec3 lightColors[4];
uniform sampler2D texture0;

void main(){
	vec4 totalAmbient = vec4(0);
	vec4 totalDiffuse = vec4(0);
	vec2 texCoord = interpTexCoord;
	vec3 unitNorm = normalize(interpNormal);
	vec4 textureCol = texture(texture0, texCoord);

	textureCol = vec4(1,0,0,1); // TEMP
	
	for(int i = 0; i < 4; i++){
		float brightness = max(0.25, dot(normalize(toLightVectors[i]), unitNorm));
		vec4 diffuse = brightness * (vec4(lightColors[i], 1) * textureCol);
		totalDiffuse += diffuse;
		vec4 ambient = vec4(lightColors[i], 1) * (brightness/4);
		totalAmbient += ambient;
	}
	gl_FragColor = totalAmbient + totalDiffuse;
	
}